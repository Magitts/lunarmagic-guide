
LUNAR MAGIC

GUIDE

 By Mamborambo



Mightyfine words for the reader




	This is meant to be comprehensive guide for using lunar magic. I'll gather information from programs internal help document and internet. The guide's purpose is to be complete, easy to read document also with explanations to technical terms such as ”VRAM” for those who might not be familiar with such terms. I'll try to gather all the relevant information, links to other guides and info relevant to things in lunar magic.
 The guide is written so that the table of contents can be easily used to find any function found from the program. Titles have been nested in same way as they are in the program.
The language is english so that non finnish speakers too are able to easily read the guide as well as to be practice for myself. The guide is also meant to be used as portfolio piece so that i might more easily find work one day, hopefully.
Some of the text isnt meant to be like this for the final version so if you are reading this line, you are reading the original unedited version of the guide.

Table of Contents
Mightyfine words for the reader	2
Explanations	6
 Number systems	6
 Terms	7
File	8
 open rom	8
 open level number	8
 level address	8
 save level to rom	8
 open next/previous level in rom	8
 open level from file	8
 save level to file	8
 graphics	9
  setup tile editor	9
  extract/insert GFX from rom	9
  Extract / insert exGFX	9
 pallettes 	9
  extract/import level palette to file	9
  extract insert shared pallettes to rom	9
 levels	10
  Export/import multiple levels to file	10
  analyze resources in levels	11
  clear original level data area	11
  export multiple levels to image files	12
  export level to image file	12
 emulator	12
  run rom in emulator	12
  setup emulator	13
  	13
  run/stop internal emulator	13
  pause, mute	13
  swap f4/ctrl+f4	13
 expand rom 2-8mb	13
 Restore	13
  create full restore point	13
  restore from restore point	14
  create ips file from rom	14
  apply ips file to rom	14
 scan rom	14
 recent files	15
edit	15
 layer 1, 2 mode	15
 edit sprites mode	16
 insert manual	16
 edit manual	17
 bring to front, send to back, bring forward, send backward	17
 object size	17
  X, Y increase / decrease	17
 conditional direct map16	17
 remap direct map16	18
view	18
 layer 1	18
 layer 2	19
 layer 3	19
 sprites 	19
 sprites hex code	20
 screen exits	21
 subscreen boundaries	21
 game view screen	22
 exit enabled tiles	22
 tile surface outlines	22
 line guide outlines	22
 tile grid	23
 zoom	23
  100- 800%	23
  filter	23
  100% increments	23
 level entrances	23
 block contents	24
 animation	24
 next animated frame	24
 reset animations	24
 exAnimation triggers	24
  custom triggers	24
   0-F	24
   next,previous	24
   activate trigger	24
  oneshot triggers	24
   00-1F	24
   next,previous	24
   activate	24
  manual triggers	24
   0-F increment / decrement	24
   next / previous 	24
   increment / decrement manual frame	24
  have star	24
  timer below 100	25
  have 5 yoshi coins	25
 silver POW	25
 POW	25
 special world passed	25
 invisible pow objects	25
 other invisible objects	25
 on/off switch on	25
 conditional direct16 map on	25
 512 height background	25
 translucent text background	25
 switchblocks	26
  green,yellow,blue,red switch blocks	26
editors	26
 add objects window	26
 add sprites window	26
 palette editor window	27
 8x8 editor window	27
 16x16 tile map editor window	28
 background layer 2 editor window	29
 overworld editor window	30
level	31
 super gfx bypass	31
 layer3 gfx /tilemap bypass	31
 gfx index in header	32
 edit level exanimated frames	33
 edit global exanimated frames	33
 edit animation settings	34
 modify screen exits	34
 modify main and midway entrances	34
 modify secondary entrances	35
 scan for undefined exits	36
 change properties in header	36
 change properties in sprite header	37
 change other properties	37
 change layer 3 settings	38
 change music timelimit settings	38
options	39
 general options	39
 restorepoint options	39
 change animation rate	40
 use fastrom addressing for this rom	40
 enable fastrom speed & apply patch	40
 use sa-1 ram remap for this rom	41
 use super fx ram remap for this rom	41
 compression options for this rom	41
 vram patch options for this rom	41
help	42
 Contents	42
 about lunarmagic	42



Explanations

	Number systems
	Hexadecimals	
	0-F
	1,2,3,4,5,6,7,8,9,10,A,B,C,D,E,F
	1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16

	More about it in here: https://owlcation.com/stem/Convert-Hex-to-Decimal
	
	Hexadecimals are numbersystem based on 16 rather than 10. On decimals numbers start repeating after 9, meaning you get numbers like 10, 11 → numbers consist of combinations of singular numbers. On hexadecimal, this happens after 16 and to represent it in more familiar 10-system, letters had to be used. 11 in hexadecimal is (when converted to 10-system) 17 and letters appear on 'normal' number 26 (1a). 
	Converting hexadecimals to decimals requires some math and I propably wont go into that here as this is supposed to be short summary for those unfamiliar. The link should have some explanation.

 Numbers like 0x001 are also hexadecimals. 0x just means number after it should be considered to be a hexadecimal
Here is good explanation: https://stackoverflow.com/questions/9539857/0x00000000-hexadecimal
Amount of numbers in 0x0000 number can also be relevant, as it tells the size of the number in terms of memory. 

		

	Binary
	1,0
	
	1,2,3,4,5
	1,10,11,100,101
	
	Link to more reading: https://www.mathsisfun.com/binary-number-system.html
	On binary, there are just 2 numbers and everything basically revolves around number 2. 1 is 1 but 2 is 10 and 3 is 11. Once you grasp the logic its more simple to understand. Basically the first (rightmost) number in binary number is always either 1 or 0 (1 or 0 in 10-system too), second-rightmost is 2 or 0, third 4 or 0 and so forth, its always increased in power of 2 as you move up the chain. Then to convert back to 10-system, you just add all the ”slots” together and 101 becomes 5 because 100 is 4 and 001 is 1.  



	Terms
		Checksum
		ROM
		Emulator
		Map16
		GFX, exGFX
		





File
	open rom
		Choose the rom you wish to use. This is effectively your working file so make sure 		you have unedited backup before you start editing.
		American and japanese 1.0 supermario world snes roms are supported, also mario all stars + world snes rom is supported.
		If program warns about corrupt checksum, it means ROM is corrupt or it has been modified with another (non lunar magic) program. This might cause serious problems later as there could be malicious code inserted to such rom or the rom might behave in unexpected ways. 
	open level number
		Opens one of the mario levels. There are multiple levels in ROM from 0-0x1FF(0-??), most are empty though.
	level address
		Opens exact ROM offset you specify. This is meant to be used to open levels that do not have pointer in the pointer table. You propably wont need to use this unless you are trying to do something clever.
	save level to rom
		Save your work and modify the ROM file you are using. 
	open next/previous level in rom
		Cycles forward or backward in list of levels in the ROM. 
	open level from file
		Opens previously created mario level file that contains all of the stuff that the level consists of. Its meant to be easy way to export singular levels. Note that file does not contain actual grapgics (GFX), use the EXTRACT GFX FILES to get those. It also doesnt contain Map16 data or shared palettes or any other level independent data. Lunar magic versions older than 1.6 work a bit differently so make sure you are using the latest version.
	save level to file
	Do the thing mentioned above and export the current level into its own file.
	graphics
		setup tile editor
			You can use external editor to edit stuff. It will also save the settings you specify to your computers registry. You have to use specific programs meant to edit tiles, palettes and such. For example: tile layer pro https://www.romhacking.net/utilities/108/.
		extract/insert GFX from rom
		Creates GFX file from rom for tile editor program to edit. It will create graphics folder into your working directory(where the ROM file you are editing is) if it doesnt exist already.
Inserting the file will replace the GFX files within the rom with one you specify.
		Extract / insert exGFX
		Ex in exGFX means ”extra” as in something that does not exist in original ROM files. These are additional graphics you might want to add to your romhack. If you want to use these you have to configure SUPER GFX BYPASS setting in LEVEL menu. More about that later.(laita linkki kohtaan)
	pallettes	
		extract/import level palette to file
			Extract or replace the palette file from the ROM. Make sure the editor you are using is set to load 256 color entries. This one will use only the pallette of the level you have currently open.
		extract insert shared pallettes to rom
		This one will use all of the shared palettes in the rom to single file. The file will not include custom level palettes as they are stored with the level itself. 
Shared pallettes are, more specifically -katso myöhemmin mitä kirjoittaa tähän lisää-

	levels
		Export/import multiple levels to file
		
Export/import multiple levels from the rom to level file. ”Only export modified levels” option lets you choose if you want to export all of the levels (0x200), creating 512 small files.
		analyze resources in levels
				Analyzation menu			

	Lunar Magic 3.31
04/21/2022  09:57:46 AM

Map16 Tile Usage Report (Non-covered, Non-conditional)

Tile 0 count: 37BA
	Levels: 2, 1C, BE, C0-C1, C6, CE, F7, 102, 11C, 127, 12D, 1D5
Tile 1 count: 89
	Levels: 116, 118, 1BF, 1C2-1C3
Tile 2 count: 423
	Levels: 1C, C0, C6, CE, F7, 11C, 12D, 1D5
Tile 3 count: 351
	Levels: 116, 118, 1BF, 1C2-1C3

Excrept from the log of the unmodified rom level
So the level analyzer basically counts everything there is in the ROM. On the log you can see mentions of tiles, if you look at 16x16 tile map editor, tile 0 is water and water appears first time on levels 2 and 1C on default supermario world? Could this be a Coincidence? I think not. So the log tells you exactly how many things of each type there are in ROM and on which levels. It also counts it in hexadecimal for fun and profit.
According to the sacred texts that is lunar magic help file, it doesnt count tiles that have been covered by other tiles or otherwise have conditions that dont make the tile appear immidiately so it counts only what you can actually see. It also wont analyze bossfight levels or anything else lunarmagic cant render. In addition to tiles it will count sprites, which music tracks are used in which levels and which graphic files are used where.
		clear original level data area
		
	This is meant for making things nicer for 3rd party asm hacks (asm stands for assembly, more about it here https://supermarioworld.fandom.com/wiki/ASM_Hack). According to the sacred texts, there are some sections that wont still be available for use, like chocolate island 2, entrances to castles and other stuff that werent even used in original game. Those have been marked with RATS(Rom-allocaton-tag-system) 
(term explained here https://www.smwcentral.net/?p=viewthread&t=102891 . It basically means marked as reserved, to prevent conflicts. Its used to prevent patches and tools from mistaking parts of the rom as free space for them to use.)


		export multiple levels to image files
		
It will create image of your levels in png format. This one will create image for every single level.
		export level to image file
		Same as before, but only for level currently open. 
		
	emulator
	Now, despite what someone might claim, EMULATORS ARE COMPLETELY LEGAL TO DOWNLOAD AND USE. Here is a link to further reading about the subject: https://www.howtogeek.com/262758/is-downloading-retro-video-game-roms-ever-legal/
(Do note that just because I link something here doesnt mean its the only or even the best source of information, use your own judgement.)
If you are looking for emulator, snes9x is the one I used for purposes of this guide. You can find one from this site: https://www.romhacking.net/
		run rom in emulator
		You dont have to specify which emulator to use every time, just the first time if you havent set up its path yet. Just use the path to exe file of the emulator.
		setup emulator
		Here you can modify the emulator path setup if you want to. Its same window that is used to setup the emulator at the first time.
		
		run/stop internal emulator
		You need lmsw.dll to use lunar magics internal emulator. It needs to be in same folder as lunar magic itself. You can download the dll here https://www.smwcentral.net/?p=section&a=details&id=20746

		pause, mute
		You can pause the emulator while testing your maps. This will let you scroll around the level. The tool creator was so nice that he added a mute so you dont have to listen to your banger soundtracks while editing your levels.
		swap f4/ctrl+f4
		Lets you choose if you want to press f4 or ctrl AND f4 to run the internal emulator. 
	expand rom 2-8mb
	The program automatically expands the ROM as needed so you dont have to use this unless you specifically want to have extra space for something. 
If you want to use SA-1(...) in your rom to have more than 4MB extra space you (have to do some stuff, i'll get to it some later time.)
	Memory is precious commodity in romhacks so dont waste it. You can expand the roms capacity only so much. Maybe i'll add a section about memory saving tricks.
	Restore
	Restore points are basically your saves for the romhack design process. Do remember to make restore points every now and again or you might find your hard work undone when something causes rom to become unopenable. In case your rom actually becomes unopenable you can get to the restore list by taking any other supermario rom, giving it same filename as one you want to access. You can also just open some other smw rom and browse  to your restore point.
Incremental restore points save space as they will track only the changes that have been done. Full restore point is always the entire thing.
		create full restore point
	As explained above.
		restore from restore point
	As explained above.
		create ips file from rom
	This will allow you to create patches for your ROM. Its basically portable restoration point you can give to your friends so they dont have to download your entire romhack everytime you want to add yet another bowser to your level.
		apply ips file to rom
	Here you can apply the patch you made to your romhack. You can also use separate patching program, like Lunar IPS you can find from here https://fusoya.eludevisibility.org/. 
	scan rom
		This will show you quickly some information about your rom. Before you jump to conclusions there are no rats in your computer invading your rom as their sovereign nation, plotting your demise and building their devilish machines to conquer us all. Here is quite good explanation about what RAT means:  https://www.smwcentral.net/?p=viewthread&t=102891 . I have explained it in the guide on previous part it was relevant. Yes, i do expect you to read it all from start to finish in orderly fashion.

For information about Map16, look here: https://www.smwcentral.net/?p=faq&page=1219828-map16. Its list of all the different tiles in your level. Here it means you are propably using older version of lunar magic if its not 0.

If unprotected space is not 0 it propably means you havent mainained your romhack very well or you have been cheating on lunar magic sempai by using 3rd party tools.

Unusable space keeps track of how much wasted space there is. It should be 0 or very small number. Basically it tracks how many free space gaps of 8 or fewer bytes there are. 

Free space is how much room you have left in your rom for adding your 4-shell jumps and pick-a-pipe mazes. Its in hexadecimal for sake of love (or maybe some technical reason).

Total user space is the maximum size of the expanded rom minus the size of original.

Conflicting rats means how many rats are trying to protect same area. This should be 0 and you should contact the proper authorities if it isnt. Common causes for this is cheating on lunar magic sempai by using  third party tools *spit*. You should rather use restore point than try to wheel and deal with the rats to resolve the conflict. If you do decide enough is enough and its time to end the ratwar once and for all!!.. - i mean if you want to resolve the conflict yourself the positions will be  recorded in rats.log file.

Conflicting space means how big the area is rats are fighting over.

Rat structures tells how many rats were detected in user area. This changes based on the level you are on and grows depending on how many new things you add to your rom. Lunar magic will take care of assigning rats usually by itself.

Largest free 32kb bank means largest 32kb bank that can be protected with a rat. If its 8000 it means full 32kb bank is available for data. 

Largest free area is for largest free area when ignoring bank boundaries. SMW cant mostly cross bank boundaries (explain better?) but compressed graphics can.

Last lunar magic version used lets you see if someone has been using older version of lunar magic to fuckup your precious troll kaizo level- i mean its so if for example you are modifying some older romhack you can see which version was used (which might be needed even in modern day and age if someone has been using third party asm hacks that are incompitable with newer versions of lunar magic.)

	recent files
	Shows list of last 10 rom or mwl files you have been using.

edit
	layer 1, 2 mode
	Select which layer you want to edit. Layer 1 is the foreground → area where that plumber guy is jumping and causing mayhem and layer 2 is the background where happy clouds and bushes watch you fail that trickjump 3031 times in row. Not all levels have second layer and might have just a background image. 
	edit sprites mode
	This is the mode where you can add all those hammerbros and bowsers you were planning to have in your fine romhack.
	insert manual
	Whith this you can add stuff to level exactly as specified. You will most likely be using this for inserting custom sprites as its easier to add stuff from 'add objects' or 'add sprites' -window.
Command specifies which object you are referring to, the object number.
Screen number specifies which screen you want the object to be placed
If you are on add sprite mode, manual insert has Extra bits in place of size/type. This should normally be left as 0 since very few sprites in game actually use it, for example secret goal point tape. Its more often used by custom sprites inserted by third party tools.
(here are for example screens 03, 04, 05)
XY position specifies the coordinates to use
You can see them more easily here as you mouse over the screen.

Size/type/ext lets you change the size of the object, its type or extended object number. What ext does depends on the object. 
Extension is for objects that can have additional parameters and should be used only for things you have actually added code into the game that does something with it, otherwise it will cause errors.
	edit manual
	Lets you edit manually the parameters of a sprite or some other thing. Its propably easier to just press alt and rightclick the thing you want to edit than do something fancy and use the top menu to do it.
	bring to front, send to back, bring forward, send backward
	Works in same way as it does with pictures in text editors. It lets you modify what appears on top of what.
	object size
		X, Y increase / decrease
		This menu command does not work to sprites as they dont have x/y component. Its used to modify objects 
How you use this could be relevant to memory use, for example: having one block size of 2 vs having 2 blocks size of 1 → having 2 blocks will use more memory.
In their infinite wisdom, Nintendo coders decreed that sometimes if object size is 0 it is to be  misinterpreted as size of 256. Lunar magic, in its just as infinite wisdom emulates this behaviour. (I dont know how often or in what situations this happens. It might also be noteworthy to mention that certain less serious parts of the guide should be viewed as that, less serious, in case someone thinks i'm actually implying nintendo puts bugs in their code on purpose.) Keep in mind that if you have objects that extend way beyond level boundaries might overwrite critical ram locations.

	conditional direct map16
		
	remap direct map16
		
view
	layer 1
		
	layer 2

	layer 3
	sprites	
	sprites hex code

	screen exits

	subscreen boundaries

	game view screen

	exit enabled tiles
	tile surface outlines

	line guide outlines

	tile grid
	

	zoom
		100- 800%
		filter
		100% increments
	level entrances

	block contents

	animation
	next animated frame
	reset animations
	exAnimation triggers
		custom triggers
			0-F
			next,previous
			activate trigger
		oneshot triggers
			00-1F
			next,previous
			activate
		manual triggers
			0-F increment / decrement
			next / previous 
			increment / decrement manual frame
		have star
		timer below 100
		have 5 yoshi coins
	silver POW
	POW
	special world passed
	invisible pow objects
	other invisible objects
	on/off switch on
	conditional direct16 map on
	512 height background
	translucent text background


	switchblocks
		green,yellow,blue,red switch blocks
editors
	add objects window
		
	add sprites window
		
		
	palette editor window
		
	8x8 editor window
	
	16x16 tile map editor window
	
	background layer 2 editor window
	
	overworld editor window
	
level
	super gfx bypass
	
	layer3 gfx /tilemap bypass
	
	gfx index in header
	
	edit level exanimated frames
	
	edit global exanimated frames
	
	edit animation settings
	
	modify screen exits
	
	modify main and midway entrances
	
	
	modify secondary entrances
	
	scan for undefined exits
	

	change properties in header
	
	change properties in sprite header
	
	change other properties

	change layer 3 settings
	
	change music timelimit settings
	
options
	general options
	
	restorepoint options
	

	change animation rate

	use fastrom addressing for this rom

	enable fastrom speed & apply patch

	use sa-1 ram remap for this rom
	use super fx ram remap for this rom
	compression options for this rom

	vram patch options for this rom


help
	Contents
	
	about lunarmagic


Sources:
Some parts might be directly from the source materials which would make those concerned about plagiarization very mad if not properly referenced. For the purposes of getting the guide done i'll write the guide first and worry about references later if at all. I will use direct quotations if its more useful than trying to reword something myself. I will also add my own comments, suggestions and analyzes. 
Here is the list of sources where i have looked for information, maybe i'll remember to add it all. I wont add anything that doesnt relate directly to romhacks here, you have to look for those links from where they are first referenced.
(Do note that just because I link something here doesnt mean its the only or even the best source of information, use your own judgement.)

Lunar magic internal help document
https://www.romhacking.net/
https://supermarioworld.fandom.com/wiki/
https://www.smwcentral.net/


